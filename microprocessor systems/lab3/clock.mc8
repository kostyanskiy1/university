******* DMC8 Project File *******
* If you read this message, you need to install the last version of Deeds! *
FVR 2
DMC 1
ROM 3
RAM 5
POH 7
POG 6
POF 5
POE 4
POD 3
POC 2
POB 1
POA 0
PIH 7
PIG 6
PIF 5
PIE 4
PID 3
PIC 2
PIB 1
PIA 0
******* DMC8 Project File *******
pA EQU 00
pB EQU 01
pC EQU 02
pD EQU 03

ORG 0
JP START
ORG 38h
JP INT
ORG 100h
START:

LD A, 0
LD (8000h), A ; Идентификация того, что уже загружено в будильник
LD (8001h), A ; Проверка на то, что будильник был активирован
LD A, 59h
LD (8002h), A ; По умолчанию загружаем 59 секунд в эту ячейку
LD (8003h), A ; По умолчанию загружаем 59 минут в эту ячейку
LD A, 23h
LD (8004h), A ; По умолчанию загружаем 23 часа в эту ячейку
LD A, 1
LD (8005h), A ; С помощью этого будем изменять сигнал по срабатыванию будильника

EI

INF:
JP INF

INT:

IN A, (pB)

;Определяем номер прерывания
CP 0
JP Z, INT_0
CP 1
JP Z, INT_1
CP 2
JP Z, INT_2
CP 3
JP Z, INT_3
JP INT_EXIT

;Прерывание 0
;Запуск часов
INT_0:

SEC:
INC B ; Увеличиваем секунду
LD A, B
CP 5Ah ; Проверяем перешли ли на следующую минуту
JP NZ, TENSEC ; Если нет, то проверяем на необходимость увеличения старшей части секунд
INC C ; Иначе увеличиваем на одну минуту
LD B, 0 ; Обнуляем секунды
JP MIN ; Переходим к минутам

TENSEC:
AND 0Fh ; Получаем младшую часть секунд
CP 0Ah ; Проверяем перескочили ли за 9 секунд
JP NZ, MIN ; Если нет, то переходим к минутам
LD A, B ; Возвращаем в A секунды
ADD A, 10h ; Увеличиваем старшую часть на 1
AND 0F0h ; Оставляем только старшую часть
LD B, A ; Загружаем в B полученные секунды

MIN:
LD A, C
CP 5Ah ; Проверяем перешли ли на следующий час
JP NZ, TENMIN ; Если нет, то проверяем на необходимость увеличения старшей части минут
INC D ; Иначе увеличиваем на один час
LD C, 0 ; Обнуляем минуты
JP HOURS ; Переходим к часам

TENMIN:
AND 0Fh ; Получаем младшую часть минут
CP 0Ah ; Проверяем перескочили ли за 9 минут
JP NZ, HOURS ; Если нет, то переходим к часам
LD A, C ; Возвращаем в A минуты
ADD A, 10h ; Увеличиваем старшую часть на 1
AND 0F0h ; Оставляем только старшую часть
LD C, A ; Загружаем в C полученные минуты

HOURS:
LD A, D
CP 24h ; Проверяем перешли ли на следующий день
JP NZ, TENHOUR ; Если нет, то проверяем на необходимость увеличения старшей части часов
LD D, 0 ; Иначе обнуляем часы
JP OUTTIME ; Переходим к выводу времени

TENHOUR:
AND 0Fh ; Получаем младшую часть часов
CP 0Ah ; Проверяем перескочили ли за 9 часов
JP NZ, OUTTIME ; Если нет, то переходим к выводу времени
LD A, D ; Возвращаем в A часы
ADD A, 10h ; Увеличиваем старшую часть на 1
AND 0F0h ; Оставляем только старшую часть
LD D, A ; Загружаем в D полученные часы

OUTTIME:
LD A, B
OUT (pB), A ; Выводим секунды
LD A, C
OUT (pC), A ; Выводим минуты
LD A, D
OUT (pD), A ; Выводим часы

CHECKALARM: ; Проверка будильника
LD A, (8001h) ; Если будильник запущен, то тут будет 1
CP 1 ; Проверяем запускали ли будильник
JP NZ, INT_EXIT ; Если нет, то выходим

LD A, (8005h) ; Проверяем, что лежит в 8005h
CP 2 ; Если 2, то меняем сигнал с 1 на 0
JP Z, CHANGESIGNAL1
CP 3 ; Если 3, то меняем сигнал с 0 на 1
JP Z, CHANGESIGNAL0

LD A, (8002h) ; Загружаем в A секнуды, отправленные мастером
CP B ; Сравниваем с текущими
JP NZ, INT_EXIT ; Выходим, если не равны
LD A, (8003h) ; Загружаем в A минуты, отправленные мастером
CP C ; Сравниваем с текущими
JP NZ, INT_EXIT ; Выходим, если не равны
LD A, (8004h) ; Загружаем в A часы, отправленные мастером
CP D ; Сравниваем с текущими
JP NZ, INT_EXIT ; Выходим, если не равны

CHANGESIGNAL0:
LD A, 2
LD (8005h), A ; Загруажем в 8005h 2 для будущего изменения сигнала
LD A, 1
OUT (pA), A ; Включаем лампочку
JP INT_EXIT ; Выходим

CHANGESIGNAL1:
LD A, 3
LD (8005h), A ; Загруажем в 8005h 3 для будущего изменения сигнала
LD A, 0
OUT (pA), A ; Выключаем лампочку
JP INT_EXIT ; Выходим

;Прерывание 1
INT_1:
LD A, 0
OUT (pA), A ; Выключаем лампочку
LD A, 1
LD (8005h), A ; Изменяем 8005, чтобы лампочка больше не менялась
LD (8001h), A ; Говорим, что будильник включён
LD A, (8000h) ; В 8000h стадия загрузки будильника
CP 0 ; Если 0, то устанавливаем секунды
JP Z, SETSEC
CP 1 ; Если 1, то устанавливаем минуты
JP Z, SETMIN
CP 2 ; Если 2, то устанавливаем часы
JP Z, SETHOURS

SETSEC:
IN A, (pA) ; Получаем секунды
LD (8002h), A ; Загружаем в 8002h
LD A, (8000h)
INC A
LD (8000h), A ; Говорим, что секунды загружены
JP INT_EXIT ; Выходим

SETMIN:
IN A, (pA) ; Получаем минуты
LD (8003h), A ; Загружаем в 8003h
LD A, (8000h)
INC A
LD (8000h), A ; Говорим, что минуты загружены
JP INT_EXIT ; Выходим

SETHOURS:
IN A, (pA) ; Получаем часы
LD (8004h), A ; Загружаем в 8004h
LD A, (8000h)
INC A
LD (8000h), A ; Говорим, что часы загружены
JP INT_EXIT ; Выходим

;Прерывание 2
INT_2:

JP INT_EXIT

;Прерывание 3
INT_3:

;Окончание прерывания
INT_EXIT:

;Говорим контроллеру прерываний, что готовы принять следующие
IN A, (pB)

EI
RET

